PROCEDURE      NAVIGATE.MAIN:T  (157875,51068)  |Last amended Jan 12, 2015,14:11:08
|| Generated by DP - don't edit anything outside |{...|}

|{ Header
|
connect database ADRC prefix = '<GDATA1>ADRC\Database\'
|
set database NACCUDS
program
. window clear
. string * 100 PATH$
. PATH$ = dsn('prefix')
. execute dbms ["attribute PREFIX  filename = '<GDATA1>NACCUDS\Database\'"]
. execute dbms ["attribute ADRC    filename = '<GDATA1>ADRC\Database\ADRC.SR4'"]
. execute dbms ["attribute NACCUDS filename = '<GDATA1>NACCUDS\DATABASE\NACCUDS.SR4'"]
. t = upset('sir.fsize',  fst(upget('sir.fsize'),"8")  )
end program
|
call DCCPROCF.SYSTEM.ALLRECS
|
retrieval update noautocase  crwarn
|}

integer*2 m_id, m_arg1, m_arg2

integer*1 IDSTATIC; preset IDSTATIC (-1)
integer*1 IDCLOSE ; preset IDCLOSE  ( 0)
integer*1 SUBJECTL                        ; preset SUBJECTL                         (1 )
integer*1 FINDCASEE                       ; preset FINDCASEE                        (2 )
integer*1 FINDCASEB                       ; preset FINDCASEB                        (3 )
integer*1 SUBMITUDS                       ; preset SUBMITUDS                        (4 )
integer*1 SCREENS                         ; preset SCREENS                          (5 )
integer*1 VISITSL                         ; preset VISITSL                          (6 )
integer*1 VISITS                          ; preset VISITS                           (7 )
integer*1 BANNER                          ; preset BANNER                           (8 )
integer*1 USERNAME                        ; preset USERNAME                         (9 )
integer*1 MASTERL                         ; preset MASTERL                          (10 )
integer*1 HIPAA1                          ; preset HIPAA1                           (11 )
integer*1 HIPAA2                          ; preset HIPAA2                           (12 )
integer*1 PLUS                            ; preset PLUS                             (13 )
integer*1 BBOX                            ; preset BBOX                             (14 )
integer*1 PICKMODULE                      ; preset PICKMODULE                       (15 )
integer*1 KEY2                            ; preset KEY2                             (16 )
integer*1 KEY2L                           ; preset KEY2L                            (17 )
integer*1 PLUSL                           ; preset PLUSL                            (18 )
integer*1 ADRCSCREENS                     ; preset ADRCSCREENS                      (19 )
integer*1 PLUSADRC                        ; preset PLUSADRC                         (20 )
integer*1 ADRCL                           ; preset ADRCL                            (21 )
integer*1 PLUSADRCL                       ; preset PLUSADRCL                        (22 )
integer*1 SUBMITNP                        ; preset SUBMITNP                         (23 )

|{ Prologue
|}

dialog "NACC Main Menu"

|{ Controls
postype 1
line     IDSTATIC                        ,   5, 393,   2, 451
label    SUBJECTL                        ,  20,       19,  62, "PTID: "
edit     FINDCASEE                       ,  17,       86,  42, 0, 0
button   FINDCASEB                       ,  18,      280,  69, 1, "Find a Subject"
button   SUBMITUDS                       ,   9,      376,  69, 0, "UDS Submission"
list     SCREENS                         ,  52, 133,  12, 230, 0
label    VISITSL                         ,  42,      250, 103, "Visit Number"
list     VISITS                          ,  52, 180, 250, 103, 0
image    BANNER                          , 330,  40,  25, 149, 0
label    USERNAME                        , 372,      368,  45, "User Name"
label    MASTERL                         , 372,      359,   8, "Client Number"
label    HIPAA1                          , 372,       12, 232, "The information contained in this database is confidential."
label    HIPAA2                          , 382,       12, 376, "All use of the database is logged and monitored. Unauthorized or improper use of this system is prohibited."
text     PLUS                            ,  52, 157, 359,  86, 0
line     BBOX                            ,  14,  21,  12, 127
choice   PICKMODULE                      ,  38,       12, 126
list     KEY2                            , 245, 104, 250, 103, 0
label    KEY2L                           , 236,      250, 103, "Date"
label    PLUSL                           ,  42,      359,  86, "NACCUDS Completed"
list     ADRCSCREENS                     , 197, 128,  12, 230, 0
text     PLUSADRC                        , 221, 148, 359,  86, 0
label    ADRCL                           , 188,       12, 230, "ADRC Screens"
label    PLUSADRCL                       , 212,      359,  86, "ADRC Completed"
button   SUBMITNP                        ,  26,      376,  69, 0, "NP Submission"
|}

initial
|{ Attribs

|}
|{ Init
. string  * 32 SCREEN$ DB$ CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$ FONT$ MONTH$ DAY$ YEAR$ ANSWER$ SELECT$
. string  * 1 PACKET$
. integer * 1 VISIT# KEY# YES NO FKEY# GOTONE BOLD ITALIC UNDERL PROCEED# IDFOUND MESSAGE# MODULE#
. integer * 4 CASE# ANSWER# KEY1# KEY2#
. date V2DATE_ ('MM/DD/YYYY')
. value labels MODULE# (1)'NACC Screens'
                       (2)'Telephone Screens'
                       (3)'FTLD Screens'
. set GOTONE FKEY# (-1) NO BOLD ITALIC UNDERL (0) YES (1) set SMALL# (3) FONT$ ('Courier')
. set item font VISITS    ,BOLD,ITALIC,UNDERL,SMALL#,FONT$
. set item font SCREENS,BOLD,ITALIC,UNDERL,SMALL#,FONT$
. set item font ADRCSCREENS,BOLD,ITALIC,UNDERL,SMALL#,FONT$
. set item font SUBJECTL,1,ITALIC,UNDERL,SMALL#,"#993366"
. set item font KEY2L   ,1,ITALIC,UNDERL,SMALL#,"#993366"
. set item font HIPAA1  ,BOLD,ITALIC,UNDERL,SMALL#,"#993366"
. set item font HIPAA2  ,BOLD,ITALIC,UNDERL,SMALL#,"#993366"
. set item font FINDCASEE,  BOLD,ITALIC,UNDERL,SMALL#,FONT$
. set image BANNER, '<GDATA1>NACCUDS\Database\Images\Header.bmp'
. set item USERNAME, sglobal('USERA')
. set item MASTERL, SYSTEM(68)
. hide item FINDCASEB
. hide item KEY2L
. hide item KEY2
. append item PICKMODULE,'NACC Screens'
. append item PICKMODULE,'Telephone Screens'
. append item PICKMODULE,'FTLD Screens'
. MODULE# = 1
. execute subprocedure LOADSCREENS
. select item ADRCSCREENS,0
. DB$ = 'NACCUDS'
. KEY# = 2
. V2DATE_ = '02/28/2008'
. execute subprocedure LOADVISITS
. execute subprocedure LOADPLUS
. set MESSAGE# (0)
|}
end initial

message ALL m_id, m_arg1, m_arg2

|{ Message
. MESSAGE# = MESSAGE# + 1
|}

ifthen (m_id eq FINDCASEB )
|< FINDCASEB
. execute subprocedure LOADCASE
. ifthen (IDFOUND = YES)
.  execute subprocedure LOADVISITS
.  PACKET$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),15,2))
write 'Find case button ' PACKET$
.  ifthen (PACKET$ = '' or PACKET$ = 'I' or PACKET$ = 'F')
.   select item PICKMODULE,1
.  elseif (PACKET$ = 'T')
.   select item PICKMODULE,2
.  endif
.  execute subprocedure LOADSCREENS
.  execute subprocedure LOADPLUS
. endif
|>
next message
endif

ifthen (m_id eq SUBMITUDS )
|< SUBMITUDS
. execute dbms 'call SUBMIT.UDS'
|>
next message
endif

ifthen (m_id eq SCREENS )
|< SCREENS
. select item ADRCSCREENS,0
. DB$ = 'NACCUDS'
. SCREEN$ = trim(sbst(gettxt(SCREENS),1,9))
. execute subprocedure SHOWKEYS
|>
next message
endif

ifthen (m_id eq VISITS )
|< VISITS
. PACKET$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),15,2))
. if (exists(PACKET$) = NO) PACKET$ = ''
write 'Double clicked VISITS ' PACKET$ KEY#
. ifthen (PACKET$ = '' or PACKET$ = 'I' or PACKET$ = 'F' and MODULE# = 1)
.  execute subprocedure LOADPLUS
.  execute subprocedure LOADDATES
write 'Double clicked VISITS ' KEY#
.  ifthen (m_arg2 = YES and KEY# = 2)
.   execute subprocedure GOTOSCREEN
.  endif
. elseif (PACKET$ = '' or PACKET$ = 'T' and MODULE# = 2)
.  execute subprocedure LOADPLUS
.  execute subprocedure LOADDATES
write 'Double clicked VISITS ' KEY#
.  ifthen (m_arg2 = YES and KEY# = 2)
.   execute subprocedure GOTOSCREEN
.  endif
. elseif (PACKET$ = '' or PACKET$ = 'I' or PACKET$ = 'F' and MODULE# = 3)
.  execute subprocedure LOADPLUS
.  execute subprocedure LOADDATES
write 'Double clicked VISITS ' KEY#
.  ifthen (m_arg2 = YES and KEY# = 2)
.   execute subprocedure GOTOSCREEN
.  endif
. endif
|>
next message
endif

ifthen (m_id eq PICKMODULE )
|< PICKMODULE
. execute subprocedure LOADSCREENS
|>
next message
endif

ifthen (m_id eq KEY2 )
|< KEY2
. ifthen (m_arg2 = YES and KEY# = 3)
.  execute subprocedure GOTOSCREEN
. endif
|>
next message
endif

ifthen (m_id eq ADRCSCREENS )
|< ADRCSCREENS
write 'ADRC Screens'
. select item SCREENS,0
. DB$ = 'ADRC'
. SCREEN$ = trim(sbst(gettxt(ADRCSCREENS),1,9))
. execute subprocedure SHOWKEYS
. ifthen (m_arg2 = YES and KEY# = 1)
.  execute subprocedure GOTOSCREEN
. endif
|>
next message
endif

ifthen (m_id eq PLUSADRC )
|< PLUSADRC
write 'Plus ADRC'
|>
next message
endif

ifthen (m_id eq SUBMITNP )
|< SUBMITNP
. database is ADRC
. execute dbms 'call SUBMIT.NP'
. end database is
|>
next message
endif

if (m_id eq 0) exit message

end message


end dialog
|{ Exit
. execute dbms 'call DCCPROCF.EXIT.MAIN'
|}
|{ Footer
. subprocedure LOADSCREENS
.  SELECT$ = gettxt(PICKMODULE)
write MESSAGE# 'Subprocedure LOADSCREENS Selected=' SELECT$
.  ifthen (SELECT$ = 'NACC Screens')
.   MODULE# = 1
.   SCREEN$ = 'Z1CHECK'
.   remove all SCREENS
.   append item SCREENS,'Z1CHECK   Form Checklist               '
.   append item SCREENS,'A1DEMOG   Subject Demographics         '
.   append item SCREENS,'A2INFORM  Informant Demographics       '
.   append item SCREENS,'A3FAMHIS  Family History               '
.   append item SCREENS,'A4MEDS    Medications                  '
.   append item SCREENS,'A5HEALTH  Family Health                '
.   append item SCREENS,'B1PHYS    Physical                     '
.   append item SCREENS,'B2HACHIN  Hachinski Ischemic Scale     '
.   append item SCREENS,'B3UPDRS   UPDRS                        '
.   append item SCREENS,'B4CDR     Global Staging-CDR           '
.   append item SCREENS,'B5NPI     NPI-Q                        '
.   append item SCREENS,'B6GDS     GDS                          '
.   append item SCREENS,'B7FAQ     FAQ                          '
.   append item SCREENS,'B8OVER    Overall Appraisal            '
.   append item SCREENS,'B9ONSET   Symptoms Onset               '
.   append item SCREENS,'C1NEURO   Neuropsychological Battery   '
.   append item SCREENS,'D1COG     Cognitive Status and Dementia'
.   append item SCREENS,'E1IMAGE   Imaging/Labs                 '
.  elseif (SELECT$ = 'Telephone Screens')
.   MODULE# = 2
.   SCREEN$ = 'Z1TELE'
.   remove all SCREENS
.   append item SCREENS,'Z1TELE    Form Checklist               '
.   append item SCREENS,'T1TELE    Inclusion Form               '
.   append item SCREENS,'A1DEMOG   Subject Demographics         '
.   append item SCREENS,'A2INFORM  Informant Demographics       '
.   append item SCREENS,'A3FAMHIS  Family History               '
.   append item SCREENS,'A4MEDS    Medications                  '
.   append item SCREENS,'A5HEALTH  Family Health                '
.   append item SCREENS,'B4CDR     Global Staging-CDR           '
.   append item SCREENS,'B5NPI     NPI-Q                        '
.   append item SCREENS,'B7FAQ     FAQ                          '
.   append item SCREENS,'B9ONSET   Symptoms Onset               '
.   append item SCREENS,'D1COG     Cognitive Status and Dementia'
.   append item SCREENS,'E1IMAGE   Imaging/Labs                 '
.  elseif (SELECT$ = 'FTLD Screens')
.   MODULE# = 3
.   SCREEN$ = 'Z1FCHECK'
.   remove all SCREENS
.   append item SCREENS,'Z1FCHECK  Form Checklist                '
.   append item SCREENS,'A3AFCONS  Record of Consent             '
.   append item SCREENS,'A3FFAMHIS Family History                '
.   append item SCREENS,'B3FUPDRS  Supplemental UPDRS            '
.   append item SCREENS,'B9FPPA    Clinical PPA and bvFTD        '
.   append item SCREENS,'C1FNEURO  Neuropsych Summary Scores     '
.   append item SCREENS,'C2FSOCIAL Social Norms Questionnaire    '
.   append item SCREENS,'C3FBEHAV  Social Behavior Checklist     '
.   append item SCREENS,'C4FINHIB  Behavioral Inhibition Scale   '
.   append item SCREENS,'C5FINTER  Interpersonal Reactivity Index'
.   append item SCREENS,'C6FMONIT  Revised Self-monitoring Scale '
.   append item SCREENS,'E2FIMAGE  Imaging Available             '
.   append item SCREENS,'E3FIMDX   Imaging in Diagnosis          '
.  endif
.  remove all ADRCSCREENS
.  append item ADRCSCREENS,'PTRACK    Primary Tracking Record       '
.  append item ADRCSCREENS,'NP        Version 10 NACC Neuropath     '
.  append item ADRCSCREENS,'BBIOP     Brain Biopsy                  '
.  append item ADRCSCREENS,'BFORM2    Current Social Situation      '
.  append item ADRCSCREENS,'BLOOD     Blood and Specimen Collection '
.  append item ADRCSCREENS,'BRAIN     Brain Donation Program        '
.  append item ADRCSCREENS,'CCD       Clinical Core Diagnosis       '
.  append item ADRCSCREENS,'CTMRI     CT/MRI                        '
.  append item ADRCSCREENS,'DFORM     Blessed Functional Activity   '
.  append item ADRCSCREENS,'FOLSTEIN  Folstein Test                 '
.  append item ADRCSCREENS,'LFORM     Tentative Neuro Diagnosis     '
.  append item ADRCSCREENS,'NEUROSUM  Neuropsychological Summary    '
.  append item ADRCSCREENS,'NEUROPAT  Neuropathology                '
.  append item ADRCSCREENS,'PERIMORT  Neuropathology/Perimortem     '
.  append item ADRCSCREENS,'PETSPECT  PET/SPECT                     '
.  append item ADRCSCREENS,'PROJECTS  Project Enrollment            '
.  append item ADRCSCREENS,'VFORM     Modified MMSE Summary         '
.  append item ADRCSCREENS,'ZFORM     Death Information             '
.  select item ADRCSCREENS,0
. end subprocedure LOADSCREENS
|
. subprocedure LOADPLUS
.  VISIT$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),1,2))
.  set item VISITSL,'Visit: ' + VISIT$
.  VISIT# = numbr(VISIT$)
.  PACKET$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),15,2))
write MESSAGE# 'Subprocedure LOADPLUS Visit=' VISIT$ 'Packet=' PACKET$ 'DB=' DB$
.   ifthen (PACKET$ = 'I' or PACKET$ = 'F' or exists(PACKET$) = NO)
.    remove all PLUS
.    append line PLUS, '<body bgcolor="#CCAABB" readonly="true">' HTML
.    do repeat REC$ = $Z1CHECK $
                      $A1DEMOG $
                      $A2INFORM$
                      $A3FAMHIS$
                      $A4MEDS  $
                      $A5HEALTH$
                      $B1PHYS  $
                      $B2HACHIN$
                      $B3UPDRS $
                      $B4CDR   $
                      $B5NPI   $
                      $B6GDS   $
                      $B7FAQ   $
                      $B8OVER  $
                      $B9ONSET $
                      $C1NEURO $
                      $D1COG   $
                      $E1IMAGE $
.      database is NACCUDS
.      old case is CASE#
.       GOTONE = NO
.       process rec REC$ via (VISIT#)
.        GOTONE = YES
.       end rec
.      end case
.     ifthen (GOTONE = YES)
.      append line PLUS,'<font color="#000066" face="Courier New">+ REC$</font><br>' HTML
.     else
.      append line PLUS,'<font color="#000066" face="Courier New">  REC$</font><br>' HTML
.     endif
.     end database is
.    end repeat
.   elseif (PACKET$ = 'T')
.    remove all PLUS
.    append line PLUS, '<body bgcolor="#CCAABB" readonly="true">' HTML
.    do repeat REC$ = $Z1TELE  $
                      $T1TELE  $
                      $A1DEMOG $
                      $A2INFORM$
                      $A3FAMHIS$
                      $A4MEDS  $
                      $A5HEALTH$
                      $B4CDR   $
                      $B5NPI   $
                      $B7FAQ   $
                      $B9ONSET $
                      $D1COG   $
                      $E1IMAGE $
.      database is NACCUDS
.      old case is CASE#
.       GOTONE = NO
.       process rec REC$ via (VISIT#)
.        GOTONE = YES
.       end rec
.      end case
.     ifthen (GOTONE = YES)
.      append line PLUS,'<font color="#000066" face="Courier New">+ REC$</font><br>' HTML
.     else
.      append line PLUS,'<font color="#000066" face="Courier New">  REC$</font><br>' HTML
.     endif
.     end database is
.    end repeat
.   elseif (PACKET$ = 'IF')
.    remove all PLUS
.    append line PLUS, '<body bgcolor="#CCAABB" readonly="true">' HTML
.    do repeat REC$ = $Z1FCHECK $
                      $A3AFCONS $
                      $A3FFAMHIS$
                      $B3FUPDRS $
                      $B9FPPA   $
                      $C1FNEURO $
                      $C2FSOCIAL$
                      $C3FBEHAV $
                      $C4FINHIB $
                      $C5FINTER $
                      $C6FMONIT $
                      $E2FIMAGE $
                      $E3FIMDX  $
.      database is NACCUDS
.      old case is CASE#
.       GOTONE = NO
.       process rec REC$ via (VISIT#)
.        GOTONE = YES
.       end rec
.      end case
.     ifthen (GOTONE = YES)
.      append line PLUS,'<font color="#000066" face="Courier New">+ REC$</font><br>' HTML
.     else
.      append line PLUS,'<font color="#000066" face="Courier New">  REC$</font><br>' HTML
.     endif
.     end database is
.    end repeat
.   endif
|ADRC Plus
.  remove all PLUSADRC
.  append line PLUSADRC, '<body bgcolor="#CCAABB" readonly="true">' HTML
.  do repeat REC$ = $PTRACK  $
                    $NP      $
                    $BBIOP   $
                    $BFORM2  $
                    $BLOOD   $
                    $BRAIN   $
                    $CCD     $
                    $CTMRI   $
                    $DFORM   $
                    $FOLSTEIN$
                    $LFORM   $
                    $NEUROSUM$
                    $NEUROPAT$
                    $PERIMORT$
                    $PETSPECT$
                    $PROJECTS$
                    $VFORM   $
                    $ZFORM   $
             REC# = $1               $
                    $5               $
                    $39              $
                    $11 with (VISIT#)$
                    $92              $
                    $14              $
                    $16 with (VISIT#)$
                    $32              $
                    $8  with (VISIT#)$
                    $38 with (VISIT#)$
                    $13 with (VISIT#)$
                    $7  with (VISIT#)$
                    $34              $
                    $18              $
                    $33              $
                    $50              $
                    $75 with (VISIT#)$
                    $12              $
.   database is ADRC
.    old case is CASE#
.      GOTONE = NO
.     process rec REC#
.      GOTONE = YES
.     end rec
.    end case
.   end database is
.   ifthen (GOTONE = YES)
.    append line PLUSADRC,'<font color="#000066" face="Courier New">+ REC$</font><br>' HTML
.   else
.    append line PLUSADRC,'<font color="#000066" face="Courier New">  REC$</font><br>' HTML
.   endif
.  end repeat
. end subprocedure LOADPLUS
|
. subprocedure LOADCASE
write MESSAGE# 'Subprocedure LOADCASE'
.  FIND$ = trim(gettxt(FINDCASEE))
.  set item FINDCASEE,''
.  FIND# = numbr(FIND$)
.  IDFOUND = NO
.  ifthen (FIND# > 0 and FIND# < 20000)
.   database is NACCUDS
.    set ANSWER# (missing) ANSWER$ ('')
.    old case is FIND#
.     CASE# = PTID
.     CASE$ = format(CASE#)
.     IDFOUND = YES
.     display textbox "Please enter a date of birth " response ANSWER#,ANSWER$
.     ifnotthen (cdate(ANSWER$,'MM/DD/YYYY') = cdate(DOB,'MM/DD/YYYY') or ANSWER$ = '99 99 9999')
.      IDFOUND = NO
.      display infobox 'The birthdate is not correct'
.      set CASE$ ('')
.      set item SUBJECTL ''
.      exit subprocedure
.     endif
.    end case
.   end database is
.   focus item SCREENS
.  else
.   display infobox 'This is not a valid PTID'
.   IDFOUND = NO
.   set CASE$ ('')
.   set item SUBJECTL ''
.   focus item FINDCASEE
.   exit subprocedure
.  endif
.  ifthen (IDFOUND = NO)
.   display okcanbox 'Do you want to create a new ID?' response PROCEED#
.   ifthen (PROCEED# = YES)
.    CASE$ = FIND$
.    CASE# = numbr(CASE$)
.    ifthen (exists(CASE#) = YES and CASE# > 0 and CASE# < 20000)
.     database is ADRC
.      execute subroutine ADRC.SCREENS.PTRACK (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.     end database is
.     database is NACCUDS
.      new case is CASE#
.       display textbox "Please enter a date of birth " response ANSWER#,ANSWER$
.       ifnotthen (exists(cdate(ANSWER$,'MM/DD/YYYY')) = YES)
.        IDFOUND = NO
.        display infobox 'The birthdate is not correct'
.        set CASE$ ('')
.        set item SUBJECTL ''
.        exit subprocedure
.       else
.        DOB = ANSWER$
.       endif
.      end case
.     end database is
.     IDFOUND = YES
.    else
.     display infobox 'This is not a valid PTID'
.     IDFOUND = NO
.     set CASE$ ('')
.     set item SUBJECTL ''
.     focus item FINDCASEE
.     exit subprocedure
.    endif
.   else
.    focus item FINDCASEE
.    set CASE$ ('')
.    set item SUBJECTL ''
.    IDFOUND = NO
.   endif
.  endif
.  ifthen (IDFOUND = YES)
.   set item SUBJECTL,'PTID: ' + CASE$
.  endif
. end subprocedure LOADCASE
|
. subprocedure SHOWKEYS
write MESSAGE# 'Subprocedure SHOWKEYS Screen=' SCREEN$
.  ifthen (SCREEN$='PTRACK'   or
           SCREEN$='NP'       or
           SCREEN$='NEUROPAT' or
           SCREEN$='PERIMORT' or
           SCREEN$='PROJECTS' or
           SCREEN$='ZFORM')
.   hide item VISITSL
.   hide item VISITS
.   hide item KEY2L
.   hide item KEY2
.   KEY# = 1
.  elseif (SCREEN$='Z1CHECK'   or
           SCREEN$='A1DEMOG'   or
           SCREEN$='A2INFORM'  or
           SCREEN$='A3FAMHIS'  or
           SCREEN$='A4MEDS'    or
           SCREEN$='A5HEALTH'  or
           SCREEN$='B1PHYS'    or
           SCREEN$='B2HACHIN'  or
           SCREEN$='B3UPDRS'   or
           SCREEN$='B4CDR'     or
           SCREEN$='B5NPI'     or
           SCREEN$='B6GDS'     or
           SCREEN$='B7FAQ'     or
           SCREEN$='B8OVER'    or
           SCREEN$='B9ONSET'   or
           SCREEN$='C1NEURO'   or
           SCREEN$='D1COG'     or
           SCREEN$='E1IMAGE'   or
           SCREEN$='Z1TELE'    or
           SCREEN$='T1TELE'    or
           SCREEN$='Z1FCHECK'  or
           SCREEN$='A3AFCONS'  or
           SCREEN$='A3FFAMHIS' or
           SCREEN$='B3FUPDRS'  or
           SCREEN$='B9FPPA'    or
           SCREEN$='C1FNEURO'  or
           SCREEN$='C2FSOCIAL' or
           SCREEN$='C3FBEHAV'  or
           SCREEN$='C4FINHIB'  or
           SCREEN$='C5FINTER'  or
           SCREEN$='C6FMONIT'  or
           SCREEN$='E2FIMAGE'  or
           SCREEN$='E3FIMDX'   or
           SCREEN$='BFORM2'    or
           SCREEN$='CCD'       or
           SCREEN$='DFORM'     or
           SCREEN$='FOLSTEIN'  or
           SCREEN$='LFORM'     or
           SCREEN$='NEUROSUM'  or
           SCREEN$='VFORM')
.   hide item KEY2L
.   hide item KEY2
.   show item VISITSL
.   show item VISITS
.   KEY# = 2
.  elseif (SCREEN$ = 'BBIOP'    or
           SCREEN$ = 'BLOOD'    or
           SCREEN$ = 'BRAIN'    or
           SCREEN$ = 'CONTACT'  or
           SCREEN$ = 'CTMRI'    or
           SCREEN$ = 'PETSPECT')
.   hide item VISITSL
.   hide item VISITS
.   show item KEY2L
.   show item KEY2
.   KEY# = 3
.   set item KEY2L 'Form Date'
.   execute subprocedure LOADDATES
.  endif
. end subprocedure SHOWKEYS
|
. subprocedure LOADVISITS
write MESSAGE# 'Subprocedure LOADVISITS KEY#=' KEY# 'Case=' CASE#
.  show item VISITSL
.  show item VISITS
.  hide item KEY2L
.  hide item KEY2
.  remove all VISITS
.  for VISIT# = 0,25
.   old case is CASE#
.    FTLD$ = ''
.    process rec Z1CHECK via (VISIT#)
.     get vars PACKET VISITDATE
.     FKEY# = VISIT#
.     PACKET$ = PACKET
.    end rec
.    process rec Z1TELE via (VISIT#)
.     get vars VISITDATE
.     PACKET$ = 'T'
.     FKEY# = VISIT#
.    end rec
.    process rec Z1FCHECK via (VISIT#)
.     get vars VISITDATE
.     FTLD$ = 'ZF'
.     FKEY# = VISIT#
.    end rec
.   end case
.   ifthen (VISIT# = FKEY#)
.    FKEY# = -1
.    append item VISITS,pad(format(VISIT#),' ',3,3) + datec(VISITDATE,'MM/DD/YYYY') + ' ' + PACKET$ + ' ' + FTLD$
.    select item VISITS,getnitem(VISITS)
.   else
.    append item VISITS,pad(format(VISIT#),' ',3,3) + '    '
.   endif
.  end for
c.  ifthen (PACKET$ = 'I' or PACKET$ = 'F')
c.   KEY# = 1
c.  elseif (PACKET$ = 'T')
c.   KEY# = 2
c.  endif
c.  execute subprocedure LOADMODULE
.  VISIT$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),1,2))
.  VISIT# = numbr(VISIT$)
. end subprocedure LOADVISITS
|
. subprocedure LOADDATES
write MESSAGE# 'Subprocedure LOADDATES'
.  VISIT$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),1,2))
.  VISIT# = numbr(VISIT$)
.  remove all KEY2
.  append item KEY2,['New ' + SCREEN$]
.  ifthen (SCREEN$ = 'BBIOP')
.   database is ADRC
.    case is CASE#
.     process rec BBIOP
.      append item KEY2,datec(BDATE,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  elseif (SCREEN$ = 'BLOOD')
.   database is ADRC
.    case is CASE#
.     process rec BLOOD
.      append item KEY2,datec(BL_FORM,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  elseif (SCREEN$ = 'BRAIN')
.   database is ADRC
.    case is CASE#
.     process rec BRAIN
.      append item KEY2,datec(DATE14,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  elseif (SCREEN$ = 'CONTACT')
.   database is ADRC
.    case is CASE#
.     process rec CONTACT
.      append item KEY2,datec(CONTDT,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  elseif (SCREEN$ = 'CTMRI')
.   database is ADRC
.    case is CASE#
.     process rec CTMRI
.      append item KEY2,datec(CM1,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  elseif (SCREEN$ = 'PETSPECT')
.   database is ADRC
.    case is CASE#
.     process rec PETSPECT
.      append item KEY2,datec(PS1,'MM/DD/YYYY')
.     end rec
.    end case
.   end database is
.  endif
. end subprocedure LOADDATES
|
. subprocedure GOTOSCREEN
.  if (exists(CASE$) = NO or trimlr(CASE$) = '') exit subprocedure
.  KEY1$ = trim(sbst(getitxt(VISITS,getpos(VISITS)),1,2))
.  DATE_ = cdate(trim(sbst(getitxt(VISITS,getpos(VISITS)),4,10)),'MM/DD/YYYY')
.  KEY2$ = trim(sbst(getitxt(KEY2,getpos(KEY2)),1,10))
.  ifthen (DB$ = 'NACCUDS')
write '0. GOTOSCREEN 'DB$ SCREEN$
.   database is NACCUDS
.    ifthen (SCREEN$ = 'A1DEMOG' or SCREEN$ = 'A2INFORM')
.     if (PACKET$ = 'T') PACKET$ = 'F'
write '1. GOTOSCREEN 'DB$ SCREEN$
.     execute subroutine ['NACCUDS.SCREENS.' + SCREEN$ + '_' + PACKET$] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'A3FAMHIS')
.     if (PACKET$ = 'T') PACKET$ = 'F'
.     ifthen (DATE_ < V2DATE_)
.      execute subroutine ['NACCUDS.SCREENS.A3FAMHIS_' + PACKET$ + 'V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.     else
.      execute subroutine ['NACCUDS.SCREENS.A3FAMHIS_' + PACKET$] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.     endif
.    elseif (SCREEN$ = 'A4MEDS' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.A4MEDS'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'A4MEDS' and DATE_ >= V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.A4G_V2'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'B2HACHIN' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.B2HACHIN_V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'B4CDR' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.B4CDR_V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'B9ONSET' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.B9ONSET_V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'C1NEURO' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.C1NEURO_V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    elseif (SCREEN$ = 'D1COG' and DATE_ < V2DATE_)
.     execute subroutine ['NACCUDS.SCREENS.D1COG_V1'] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    else
write '2. GOTOSCREEN 'DB$ SCREEN$
.     KEY6$ = PACKET$
.     execute subroutine [DB$ + '.SCREENS.' + SCREEN$] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    endif
.    if (SCREEN$ = 'Z1CHECK' or SCREEN$ = 'Z1TELE')  execute subprocedure LOADVISITS
.   end database is
.  elseif (DB$ = 'ADRC')
write '3. Clicked ADRC GOTOSCREEN ' DB$ SCREEN$ KEY1$ KEY2$
.   database is ADRC
.    ifthen (sbst(KEY2$,1,3) = 'New' and KEY# = 3)
.     display textbox 'Please enter a new form date' response PROCEED#,KEY2$ |
.     KEY2$ = trim(KEY2$)
.     KEY2$ = replace(KEY2$,' ','/',10,0,0)
.     ifthen (PROCEED# > 0 and cdate(KEY2$,'MM/DD/YYYY') > cdate('01/01/1950','MM/DD/YYYY') and cdate(KEY2$,'MM/DD/YYYY') < today(0))
.      execute subroutine [DB$ + '.SCREENS.' + SCREEN$] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.     endif
.    else
.     execute subroutine [DB$ + '.SCREENS.' + SCREEN$] (CASE$ KEY1$ KEY2$ KEY3$ KEY4$ KEY5$ KEY6$)
.    endif
.   end database is
.  endif
.  set KEY2$ (missing)
. end subprocedure GOTOSCREEN
|
end retrieval
|
disconnect database ADRC   |Disconnects at end, Connects before retrieval, in previous program
|}
END PROCEDURE
